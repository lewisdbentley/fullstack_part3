{"version":3,"sources":["components/Search.js","components/Form.js","components/Persons.js","service/persons.js","components/Notification.js","App.js","index.js"],"names":["Search","searchHandler","onChange","Form","props","onSubmit","newPersonHandler","nameHandler","numberHandler","Results","personsToShow","removePerson","map","p","key","_id","name","number","onClick","baseUrl","axios","get","id","console","log","delete","updatedPerson","put","newPerson","post","Notification","message","style","App","useState","persons","setPersons","setName","setNumber","search","setSearch","setMessage","color","fontSize","messageStyle","setMessageStyle","useEffect","personService","then","response","data","filter","toUpperCase","includes","length","e","currentTarget","value","s","preventDefault","foundPerson","find","element","window","confirm","alert","person","concat","changedStyle","catch","error","JSON","stringify","Persons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54913001.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Search = ({searchHandler}) => {\n    return (\n        <>\n            <p>Search: <input onChange={searchHandler}/></p>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\n\nconst Form = (props) => {\n    return (    \n            <form onSubmit={props.newPersonHandler}>\n            <div>\n                <p>Name: <input onChange={props.nameHandler}/></p>\n                <p>Number: <input onChange={props.numberHandler}/></p>\n                <button>add</button>\n            </div>\n            </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\n\nconst Results = ({personsToShow, removePerson}) => {\n    return (\n        <ul>\n            {personsToShow.map(p =>\n                <li key={p._id}>{p.name} - {p.number} - <button onClick={() => removePerson(p)}>delete</button></li>\n            )}\n        </ul>\n    )\n}\n\nexport default Results","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n//GET\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\n//POST\nconst createPerson = (newPerson) => {\n    console.log(`created new person called ${newPerson.name}`)\n    return axios.post(baseUrl, newPerson)\n}\n\n//PUT\nconst updatePersonNumber = (id, updatedPerson) => {\n    console.log(`updated the number of person with id: ${id}`)\n    return axios.put(`${baseUrl}/${id}`, updatedPerson)\n}\n\n//DEL\nconst removePerson = (id) => {\n    console.log(`deleted person with id: ${id}`)\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n    getAll: getAll,\n    removePerson: removePerson,\n    updatePersonNumber: updatePersonNumber,\n    createPerson: createPerson\n}","import React from 'react'\n\nconst Notification = ({message, style}) => {\n    return (\n        <div style={style}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Search from './components/Search'\nimport Form from './components/Form'\nimport Persons from './components/Persons'\nimport personService from './service/persons'\nimport Notification from './components/Notification'\n\n\nconst App = (props) => {\n    const [persons, setPersons] = useState([])\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState(null)\n    const [search, setSearch] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageStyle, setMessageStyle] = useState({\n        color: 'green',\n        fontSize: 30\n    })\n\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then((response) => {\n                setPersons(response.data)\n            })\n        }, [])\n\n    const nameHandler = (e) => {\n        setName(e.currentTarget.value)\n    }\n\n    const numberHandler = (e) => {\n        setNumber(e.currentTarget.value)\n    }\n\n    const searchHandler = (e) => {\n        setSearch(e.currentTarget.value)\n    }\n\n    const personsToShow = search\n        // new array containing any person with a name matching search\n        ? persons.filter(p => (p.name.toUpperCase()).includes((search.toUpperCase())))\n        : persons\n\n    const newPersonHandler = (s) => {\n        s.preventDefault()\n        const newPerson = {\n            name: name,\n            number: number\n        }\n        let foundPerson = persons.find(element => element.name === newPerson.name)\n        if(foundPerson) {\n            if (window.confirm(`${newPerson.name} is already in the phone book. Would you like to update their number?`)) {\n                alert(`you are a naughty bugger to update ${foundPerson.id}'s ${foundPerson._id}'s number!!!`)\n                personService\n                    .updatePersonNumber(foundPerson.id, newPerson)\n                    .then((response) => {\n                        //find and replace updated person\n                        setPersons(persons\n                            .filter((person) => {\n                                return person.id !== foundPerson.id\n                            })\n                            .concat(response.data))\n                        setName('')\n                        setNumber(null)\n                        const changedStyle = { ...messageStyle, color: 'green'}\n                        setMessageStyle(changedStyle)\n                        setMessage(`successfully updated the number of ${newPerson.name}`)\n                    })\n                    .catch((response) => {\n                        const changedStyle = { ...messageStyle, color: 'red'}\n                        setMessageStyle(changedStyle)\n                        setMessage(`the information for ${foundPerson.name} has already been removed from the server.`)\n                    })\n            }\n        } else {\n            //make a POST request to http://localhost:3001/persons\n            personService\n                .createPerson(newPerson)\n                .then((response) => {\n                    console.log(`we posted data and got this back: ${response}`)\n                    // rerender persons\n                    setPersons(persons.concat(response.data))\n                    setName('')\n                    setNumber(null)\n                })\n                .catch(error => {\n                    const changedStyle = { ...messageStyle, color: 'red'}\n                    setMessageStyle(changedStyle)\n                    setMessage(JSON.stringify(error.response.data))\n                    console.log(error.response.data)\n                })\n        }        \n    }\n\n    const removePerson = (person) => {\n        const id = person.id\n        if (window.confirm(`Are you sure you would like to delete ${person.name}?`)) {\n            personService\n                .removePerson(person.id)\n                .then((response) => {\n                    setPersons(persons.filter((person) => {\n                        return person.id !== id\n                    }))\n                    setName('')\n                    setNumber(null)\n                })\n        }   \n    }\n\n    console.log('there are', persons.length, 'persons in memory')\n\n    return (\n        <>\n            <h1>Phonebook</h1>\n            < Notification message={message} style={messageStyle}/>\n            < Search searchHandler={searchHandler} />\n            <h2>Add</h2>\n            < Form nameHandler={nameHandler} numberHandler={numberHandler} newPersonHandler={newPersonHandler} />\n            <h2>Contacts</h2>\n            < Persons personsToShow={personsToShow} removePerson={removePerson}/>\n            <div>debug: {name}</div>\n            <div>debug: {number}</div>\n            <div>debug: {search}</div>\n        </>\n    )\n}\n\nexport default App\n\n// [{name: 'searching...', number: '404' }]","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\n\nconst list = [\n  {\n    name: 'David Bellham',\n    number: '02084250531'\n  },\n  {\n    name: 'Ada Lovelace',\n    number: '02084250531'\n  },\n  {\n    name: 'Arto Hellas',\n    number: '02084250531'\n  }\n]\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}